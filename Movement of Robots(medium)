class Solution {
public:
    int sumDistance(vector<int>& nums, string s, int d) {
        int n = nums.size(); 
        long long mod = 1e9 + 7;

        int cnt = 0; 

        int dir = s.size(); 
        vector<long long>pos(n); 

        for(int i = 0 ; i < dir ; i++) {
            if(s[i] =='R') {
               pos[i] = (long long)nums[i] + d; 
            }
            else 
            {
                pos[i] = (long long)nums[i] - d ; 
            }
        }

        sort(pos.begin() , pos.end()) ; 
        long long sum = 0;
        long long prefix = 0;

        for (int i = 0; i < n; ++i) {
            sum = (sum + ((long long)pos[i] * i - prefix) % mod) % mod;
            prefix = (prefix + pos[i]) % mod;
        }

        return (sum + mod) % mod;




    }
};
