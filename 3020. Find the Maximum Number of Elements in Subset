class Solution {
public:
    int maximumLength(vector<int>& nums) {
        int n = nums.size();
        unordered_map<long long, int> mpp;
        for (int i = 0; i < n; i++) {
            mpp[nums[i]]++;
        }

        int mx = 1;
        int cnt = 0 ;

        if (mpp[1] > 0) {
            cnt = mpp[1];
            if (cnt % 2 == 0) cnt--;  
            mx = max(mx, cnt);
            mpp[1] = 0;  
        }

        for(int i = 0 ; i < n ; i++) {
            long long x = nums[i] ; 
            cnt = 0 ; 

            if(nums[i] == 1) {
                continue ; 
            }

            while(mpp[x] >= 2 ) {
                cnt += 2 ; 
                x= x *x ; 

                if(x >= 1e9) {
                    break ;
                }

            }
            if(mpp[x] == 1  ) {
                cnt += 1 ; 
            }
            else if(cnt > 0 ) {
                cnt = cnt -1 ; 
            }
            mx = max(mx , cnt) ; 
        }


        return mx;
    }
};
