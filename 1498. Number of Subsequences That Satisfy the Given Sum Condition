// check the input constraint to understand more about the approach or refer the guide.

class Solution {
public:
    const int MOD = 1e9 + 7;
    int numSubseq(vector<int>& nums, int target) {
        int n = nums.size();
        sort(nums.begin(), nums.end());
        int l =0 , r = n - 1; 
        int cnt =0; 
          vector<int> power(n, 1);
        for (int i = 1; i < n; ++i)
            power[i] = (power[i - 1] * 2) % MOD;

        while(l <= r) {
            if(nums[l] + nums[r] <= target) {
                cnt = (cnt + power[r - l]) % MOD;

                l++ ;
            }
            else {
                r-- ; 
            }
        }

        return cnt ; 

    }
};
